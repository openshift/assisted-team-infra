pipeline {
    agent { label 'download_logs' }

    parameters {
        string(name: 'REMOTE_SERVICE_URL', defaultValue: 'https://api.openshift.com', description: 'Service URL')
    }

    triggers { cron('H/10 * * * *') }

    environment {
        SKIPPER_PARAMS = " "
        OFFLINE_TOKEN = credentials('admin_offline_token')
        JIRA_CREDS = credentials('Ronnie-jira')
        LOGS_DEST = "build"
        SLACK_TOKEN = credentials('slack-token')

    }
    options {
      timeout(time: 10, unit: 'MINUTES')
    }

    stages {
        stage('Run') {
            steps {
                sh "make download_logs"
                sh "skipper run discovery-infra/create_triage_tickets.py -up ${JIRA_CREDS}"
            }
        }
    }

    post {
        failure {
            script {
                def data = [text: "Attention! Download log has an error, see: ${BUILD_URL}"]
                writeJSON(file: 'data.txt', json: data, pretty: 4)
            }
            sh '''curl -X POST -H 'Content-type: application/json' --data-binary "@data.txt"  https://hooks.slack.com/services/${SLACK_TOKEN}'''
        }
    }
}
